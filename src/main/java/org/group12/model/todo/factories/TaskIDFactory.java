package org.group12.model.todo.factories;

import org.group12.model.IDFactory;

import java.util.concurrent.atomic.AtomicLong;

/**
 * Represents a factory for generating IDs for Task objects.
 * This class extends the IDFactory abstract class and provides the specific implementation for Task.
 */
public class TaskIDFactory extends IDFactory {
    private static final String PREFIX = "TK";
    private static final AtomicLong counter = new AtomicLong(1);
    private static TaskIDFactory instance;
    private TaskIDFactory(){

    }
    public static synchronized TaskIDFactory getInstance(){
        if(instance == null){
            instance = new TaskIDFactory();
        }
        return instance;
    }

    /**
     * Returns the prefix for the IDs generated by this factory.
     *
     * @return the prefix for the IDs
     */
    @Override
    protected String getPrefix() {
        return PREFIX;
    }
    /**
     * Returns the counter for the IDs generated by this factory.
     *
     * @return the counter for the IDs
     */
    @Override
    protected AtomicLong getCounter() {
        return counter;
    }

    @Override
    protected String getObjectType() {
        return "Task";
    }
}

